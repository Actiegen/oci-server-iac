name: Terraform OCI Provision

on:
  push:
    branches:
      - main
  workflow_dispatch:  # usado para o apply manual

env:
  TF_VAR_availability_domain: ${{ vars.TF_VAR_availability_domain }}
  TF_VAR_compartment_id: ${{ secrets.TF_VAR_compartment_id }}
  TF_VAR_shape: ${{ vars.TF_VAR_shape }}
  TF_VAR_ssh_public_key: ${{ secrets.TF_VAR_ssh_public_key }}
  TF_VAR_source_image_id: ${{ secrets.TF_VAR_source_image_id }}
  TF_VAR_display_name: ${{ vars.TF_VAR_display_name }}
  TF_VAR_namespace: ${{ secrets.TF_VAR_namespace }}
  TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_tenancy_ocid }}
  TF_VAR_user_ocid: ${{ secrets.TF_VAR_user_ocid }}
  TF_VAR_fingerprint: ${{ secrets.TF_VAR_fingerprint }}
  TF_VAR_private_key: ${{ secrets.TF_VAR_private_key }}
  TF_VAR_region: ${{ vars.TF_VAR_region }}
  TF_VAR_auth: ${{ vars.TF_VAR_auth }}

jobs:

  prepare:
    name: üß™ Prepare Terraform & Ansible
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="region=${{ env.TF_VAR_REGION }}" \
            -backend-config="tenancy_ocid=${{ env.TF_VAR_TENANCY_OCID }}" \
            -backend-config="user_ocid=${{ env.TF_VAR_USER_OCID }}" \
            -backend-config="fingerprint=${{ env.TF_VAR_FINGERPRINT }}" \
            -backend-config="private_key=${{ env.TF_VAR_PRIVATE_KEY }}"

  #     - name: Terraform Validate
  #       run: terraform validate

  #     - name: Terraform Format Check (Lint)
  #       run: terraform fmt -check -diff

  #     - name: run-ansible-lint
  #       uses: ansible/ansible-lint@v25.6.1
  #       with:
  #         working_directory: ansible/

  # plan:
  #   name: üîç Terraform Plan
  #   runs-on: ubuntu-latest
  #   needs: prepare

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Plan
  #       run: terraform plan

  # apply:
  #   name: üöÄ Terraform Apply (Manual)
  #   runs-on: ubuntu-latest
  #   needs: plan
  #   if: github.event_name == 'workflow_dispatch'

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve
